% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\SweaveOpts{concordance=TRUE}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("P1,P2_vs_DMSO1,DMSO2 neg.","P1,P2_vs_DMSO1,DMSO2 pos.");
ngenes=c(614,614);
direction=c("negative","positive");
fdr1=c(4,6);
fdr5=c(5,19);
fdr25=c(7,184);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of P1,P2 vs DMSO1,DMSO2 neg.}

The following figure shows the distribution of RRA score in the comparison P1,P2 vs DMSO1,DMSO2 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('parabinostat.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("ENSG00000173011","ENSG00000152382","ENSG00000184634","ENSG00000124422","ENSG00000181090","ENSG00000204371","ENSG00000176476","ENSG00000126012","ENSG00000171148","ENSG00000124702")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='P1,P2_vs_DMSO1,DMSO2 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(414.9924011138419,384.22046468849436,333.15466602827087,243.41319010954066),c(727.2538401872474,610.3051754215955,506.0454256581024,577.4937094209572),c(1157.5033148714513,1127.9526825099529,651.73988602032,661.6264563380132),c(1310.0740505750696,1802.500507975927,879.9945405877942,689.3984310484977),c(208.51333879494507,222.37840399977165,101.98612225355231,115.98883555555294),c(973.401293789085,1103.2439709544226,485.64820120739193,567.6918359937274),c(778.1107520884535,693.0793591326217,205.91483731193418,166.63184826290703),c(843.2075993219973,621.4240956215841,356.4657796862257,322.6450003129818),c(663.1741311917277,906.8097140879577,439.0259738914823,342.2487471674414),c(106.79951499253283,90.18679717768516,88.38797261974533,84.132746917056),c(450.5922394446862,659.7225985326559,532.2704285233016,356.9515573082861),c(367.18690392670817,616.4823533104781,353.5518904789813,292.4225572456898),c(466.8664512530721,336.0384771552105,285.56114230994643,361.0356712362986),c(503.48342782194055,742.496782243682,403.0880070021353,291.6057344600873),c(143.41649156140124,129.72073566653347,82.56019420525664,129.8748229107952),c(578.7516574357256,579.4192859771828,334.12596243068566,280.987038247255),c(308.1928861213091,276.737569421938,259.3361394447473,223.80944325508102),c(391.5982216392871,447.2276791550963,321.49910919929346,271.1851648200252),c(203.42764760482447,122.3081221998744,78.67500859559749,111.90472162754051),c(80.35392080390567,165.54836742205222,32.05278127968787,53.91030384976404))
targetgene="ENSG00000173011"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(304.12433316921255,457.1111637773084,237.96761859162206,249.94777239436056),c(547.2203720569778,333.5676059996575,511.8732040725911,352.8674433802737),c(733.3566696153922,1244.0836268209448,460.3944947446076,530.1179878560131),c(133.24510918116002,287.85648962192664,100.04352944872274,115.17201276995044),c(698.773969522572,405.222869510695,358.4083724910553,498.26189921751615),c(444.48941001654146,518.8829426661339,303.04447755341255,320.1945319561743),c(649.9513340974141,811.6811745991665,312.7574415775604,520.3161144287832),c(307.17574788328494,200.1405635997945,163.17779560568368,106.1869621283231),c(938.8185936962649,1171.1929277321306,607.06025150924,645.2900006259636),c(322.43282145364674,424.98983875511914,144.7231639598028,258.1160002503854),c(301.0729184551402,443.5213724217668,205.91483731193418,346.33286109545384),c(220.71899765123453,282.9147473108206,236.99632218920726,238.51225339592574),c(121.03945032487056,133.42704239986298,65.07685896179052,64.52900006259635),c(199.35909465272798,174.1964164664878,330.24077682102654,178.06736726134181),c(274.627324266513,216.2012261108891,163.17779560568368,208.2898103286338),c(123.07372680091879,75.36157024436706,91.30186182698968,61.26170892018641),c(239.02748593566875,133.42704239986298,206.88613371434897,142.94398748043494),c(394.6496363533594,268.0895203775025,249.62317542059947,214.82439261345368),c(171.89636222607666,195.19882128868844,209.80002292159332,205.83934197182634),c(197.3248181766797,253.26429344418437,131.12501432599583,168.265493834112))
targetgene="ENSG00000152382"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(163.7592563218837,124.77899335542742,125.29723591150712,169.899139405317),c(643.8485046692695,601.6571263771599,333.15466602827087,380.6394180907582),c(900.1673406513482,1100.7730997988697,531.2991321208867,816.8227856024854),c(657.071301763583,822.8000947991551,336.06855523551525,379.82259530515574),c(288.86725959885075,357.0408819774111,361.3222616982996,426.3814940844974),c(453.6436541587585,481.8198753328386,248.65187901818467,219.72532932706858),c(455.6779306348068,590.5382061771713,337.03985163793,381.4562408763607),c(436.35230411234846,321.2132502218924,225.34076536022985,182.15148118935426),c(732.3395313773681,922.8703765990523,473.02134797599973,443.53477258214957),c(357.0155215464669,302.68171655524475,330.24077682102654,259.7496458215904),c(295.9872272650196,368.15980217739974,313.72873797997516,301.4076078873171),c(75.26822961378505,130.95617124430996,56.33519134005746,35.940202566509356),c(39.66839128294077,56.83003657771942,68.96204457144965,51.459835492956586),c(255.3016977440547,374.33698006628225,408.91578541662403,282.62068381845995),c(255.3016977440547,121.07268662209789,258.3648430423325,302.2244306729196),c(184.10202108236612,207.55317706645354,224.3694689578151,143.76081026603742),c(307.17574788328494,397.81025604403595,223.3981725554003,245.04683568074563),c(308.1928861213091,338.5093483107635,253.50836103025858,218.0916837558636),c(161.72497984583543,284.1501828885971,193.287984080542,172.34960776212444),c(35.59983833084428,49.417423111060366,31.081484877273084,40.024316494521784))
targetgene="ENSG00000184634"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(370.2383186407805,365.6889310218467,246.7092862133551,323.46182309858426),c(827.9505257516355,917.9286342879462,583.7491378512851,532.5684562128205),c(56.95974132935085,67.948956777708,55.363894937642684,17.153278497652195),c(191.22198874853498,218.6720972664421,154.43612798395063,158.46362040688217),c(715.048181330958,527.5309917105694,473.02134797599973,500.7123675743236),c(198.34195641470384,128.48530008875696,132.0963107284106,132.32529126760264),c(170.87922398805256,172.96098088871128,213.68520853125244,214.82439261345368),c(321.41568321562266,387.92677142182384,293.3315135292647,340.61510159623646),c(182.0677446063179,228.5555818886542,168.03427761775762,93.11779755868334),c(422.11236878001074,438.57963011066073,208.82872651917853,277.71974710484506),c(434.3180276363002,366.9243665996232,236.02502578679247,140.4935191236275),c(388.5468069252147,605.3634331104895,422.513935050431,379.00577251955326),c(456.6950688728309,474.4072618661795,328.29818401619696,380.6394180907582),c(259.3702506961512,216.2012261108891,267.1065106640656,300.59078510171463),c(168.8449475120043,117.36637988876836,165.12038841051327,133.14211405320512),c(216.65044469913803,226.08471073310116,130.15371792358104,179.7010128325468),c(301.0729184551402,342.215655044093,257.3935466399177,194.40382297339153),c(179.01632989224552,208.78861264423006,132.0963107284106,216.45803818465865),c(337.6898950240086,265.61864922194945,208.82872651917853,145.39445583724242),c(153.58787394164247,245.85167997752532,169.0055740201724,300.59078510171463))
targetgene="ENSG00000124422"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(155.6221504176907,222.37840399977165,150.5509423742915,168.265493834112),c(1175.8118031558854,1003.1736891545254,673.1084068734452,1404.935191236275),c(353.9641068323946,371.8661089107292,326.35559121136737,321.82817752737924),c(126.12514151499116,126.01442893320393,178.71853804432024,151.92903812206228),c(623.505739908787,731.3778620436934,399.20282139247615,320.1945319561743),c(490.26063072762696,542.3562186438875,379.7768933441805,349.60015223786377),c(644.8656429072935,681.960438932633,429.3130098673345,566.8750132081249),c(131.21083270511178,96.36397506656772,82.56019420525664,49.00936713614912),c(287.8501213608266,300.2108453996917,250.59447182301423,200.93840525821142),c(731.322393139344,370.63067333295277,607.06025150924,588.1124056337895),c(395.66677459138356,294.03366751080915,319.55651639446387,342.2487471674414),c(319.3814067395744,353.33457524408163,273.9055854809691,225.443088826286),c(146.4679062754736,202.6114347553475,98.10093664389318,160.09726597808714),c(318.36426850155027,686.902181243739,331.2120732234413,318.5608863849693),c(100.6966855643881,174.1964164664878,94.21575103423403,177.25054447573933),c(276.6616007425613,305.1525877107978,265.163917859236,249.94777239436056),c(377.35828630694937,441.05050126621376,260.3074358471621,294.87302560249725),c(168.8449475120043,174.1964164664878,83.53149060767142,115.17201276995044),c(218.6847211751863,342.215655044093,198.14446609261591,125.79070898278276),c(149.51932098954597,163.0774962664992,101.98612225355231,105.37013934272062))
targetgene="ENSG00000181090"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(832.019078703732,1013.0571737767375,657.5676644348086,472.1235700782366),c(104.7652385164846,149.4877049109576,240.8815077988664,186.23559511736667),c(405.8381569716248,366.9243665996232,205.91483731193418,194.40382297339153),c(500.43201310786816,654.7808562215498,364.236150905544,404.3272788732303),c(326.50137440574326,586.8318994438418,335.09725883310045,307.12536738653455),c(161.72497984583543,207.55317706645354,164.14909200809848,115.17201276995044),c(330.56992735783973,319.9778146441159,370.0639293200327,356.9515573082861),c(332.604203833888,421.2835320217896,304.01577395582734,234.42813946791333),c(211.56475350901744,206.31774148867703,150.5509423742915,160.09726597808714),c(397.7010510674318,431.1670166440017,575.007470229552,471.3067472926341),c(1330.416815335552,1452.8722394651747,621.6296975454617,817.6396083880879),c(276.6616007425613,133.42704239986298,188.43150206846806,219.72532932706858),c(472.96928068121684,449.69855031064935,456.5093091349484,437.0001902973297),c(301.0729184551402,473.171826288403,257.3935466399177,236.87860782472077),c(276.6616007425613,130.95617124430996,209.80002292159332,150.29539255085731),c(74.25109137576092,97.59941064434422,146.66575676463236,128.24117733959022),c(26.44559418862718,50.65285868883687,13.598149633806974,30.222443067291962),c(77.30250608983329,69.1843923554845,86.44537981491577,78.4149874178386),c(76.28536785180917,156.90031837761666,81.58889780284184,36.757025352111846),c(135.27938565720825,192.72795013313544,116.55556828977407,125.79070898278276))
targetgene="ENSG00000204371"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(423.1295070180349,363.2180598662937,182.60372365397936,241.7795445383357),c(1237.8572356753568,992.0547689545368,765.3815651028497,535.018924569628),c(283.7815684087301,417.5772252884601,216.5990977384968,147.02810140844738),c(77.30250608983329,34.59219617774225,39.82315249900614,82.49910134585103),c(460.7636218249274,513.9412003550278,389.48985736832833,410.8618611580502),c(142.3993533233771,200.1405635997945,102.95741865596709,215.64121539905616),c(449.57510120666205,520.1183782439103,369.0926329176179,296.5066711737022),c(164.7763945599078,113.66007315543884,116.55556828977407,172.34960776212444),c(146.4679062754736,190.2570789775824,151.52223877670627,83.31592413145351),c(406.85529520964894,411.40004739957755,412.80097102628315,472.1235700782366),c(187.1534357964385,244.6162443997488,134.0389035332402,89.8505064162734),c(404.8210187336007,531.2372984438989,490.50468321946585,451.70300043817446),c(99.67954732636399,82.77418371102611,80.61760140042706,75.14769627542866),c(96.62813261229162,126.01442893320393,101.01482585113752,69.42993677621126),c(272.59304779046477,332.33217042188096,199.1157624950307,188.68606347417415),c(95.61099437426749,69.1843923554845,89.35926902216012,53.91030384976404),c(90.52530318414688,17.296098088871126,22.33981725554003,26.138329139279534),c(114.93662089672581,114.89550873321535,189.40279847088286,129.0580001251927),c(174.94777694014903,182.84446551092336,137.9240891428993,129.0580001251927),c(159.6907033697872,172.96098088871128,181.6324272515646,160.91408876368962))
targetgene="ENSG00000176476"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(206.47906231889684,213.73035495533608,291.38892072443514,132.32529126760264),c(1315.1597417651901,1781.498103153726,668.2519248613713,891.9704818779142),c(372.27259511682877,406.4583050884715,426.39912066009015,362.66931680750355),c(203.42764760482447,166.78380299982874,221.45557975057073,154.37950647886976),c(209.5304770329692,223.61383957754816,220.48428334815594,209.92345589983876),c(143.41649156140124,100.07028179989724,34.966670486932216,48.19254435054664),c(765.9050932321641,1009.350867043408,608.0315479116547,637.1217727699386),c(207.49620055692094,280.44387615526756,208.82872651917853,186.23559511736667),c(453.6436541587585,601.6571263771599,219.51298694574115,293.2393800312923),c(354.98124507041865,474.4072618661795,287.503735114776,413.31232951485765),c(235.97607122159638,233.49732419976021,264.1926214568212,219.72532932706858),c(36.6169765688684,74.12613466659054,51.478709327983545,52.27665827855907),c(238.01034769764462,338.5093483107635,160.26390639843933,184.6019495461617),c(607.231528100401,572.0066725105237,443.8824559035562,487.6432030046838),c(464.8321747770239,563.3586234660881,346.75281566207786,441.0843042253421),c(273.6101860284889,337.273912732987,340.92503724758916,356.9515573082861),c(220.71899765123453,228.5555818886542,221.45557975057073,152.7458609076648),c(226.82182707937926,306.3880232885743,271.9629926761395,209.92345589983876),c(191.22198874853498,177.90272319981733,127.23982871633669,115.98883555555294),c(70.18253842366444,203.846870333124,84.5027870100862,131.50846848200015))
targetgene="ENSG00000126012"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(661.1398547156795,709.1400216437163,567.2370990102338,498.26189921751615),c(142.3993533233771,166.78380299982874,141.80927475255845,129.8748229107952),c(835.0704934178044,795.6205120880719,934.387139123022,729.4227475430195),c(632.659984051004,574.4775436660767,519.6435752919094,320.1945319561743),c(281.7472919326819,239.67450208864278,268.0778070664804,191.1365318309816),c(171.89636222607666,271.795827110832,113.64167908252972,183.78512676055922),c(79.33678256588153,111.18920199988582,35.937966889347,52.27665827855907),c(315.31285378747793,223.61383957754816,163.17779560568368,239.32907618152822),c(98.66240908833986,128.48530008875696,132.0963107284106,114.35518998434796),c(239.02748593566875,270.5603915330555,177.74724164190545,170.71596219091947),c(765.9050932321641,978.4649775989952,553.6389493764268,717.1704057589823),c(401.7696040195283,421.2835320217896,339.95374084517437,424.7478485132924),c(98.66240908833986,144.54596259985158,131.12501432599583,101.28602541470819),c(181.05060636829376,187.78620782202938,161.23520280085413,204.20569640062135),c(260.3873889341753,206.31774148867703,208.82872651917853,182.96830397495674),c(312.26143907340554,343.4510906218695,172.89075962983154,162.5477343348946),c(225.80468884135516,259.44147133306694,226.31206176264465,149.47856976525483),c(113.9194826587017,128.48530008875696,106.84260426562622,86.58321527386346),c(332.604203833888,531.2372984438989,347.7241120644926,326.7291142409942),c(164.7763945599078,291.5627963552562,287.503735114776,316.11041802816186))
targetgene="ENSG00000171148"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(243.09603888776522,243.3808088219723,251.56576822542903,214.82439261345368),c(382.44397749706997,321.2132502218924,291.38892072443514,285.8879749608699),c(523.826192582423,485.5261820661681,424.45652785526056,342.2487471674414),c(663.1741311917277,700.4919725992806,473.9926443784145,584.0282917057771),c(180.03346813026965,315.0360723330098,168.03427761775762,280.987038247255),c(382.44397749706997,549.7688321105466,543.925985352279,489.2768485758888),c(173.93063870212492,143.31052702207506,141.80927475255845,177.25054447573933),c(363.11835097461164,494.17423111060367,281.6759567002873,376.5553041627458),c(336.67275678598446,441.05050126621376,332.1833696258561,306.30854460093207),c(210.5476152709933,114.89550873321535,94.21575103423403,102.10284820031067),c(344.80986269017745,470.70095513284997,303.04447755341255,419.03008901407503),c(835.0704934178044,684.431310088186,559.4667277909155,573.4095954929447),c(143.41649156140124,137.13334913319252,246.7092862133551,178.06736726134181),c(218.6847211751863,112.42463757766234,191.34539127571242,151.1122153364598),c(395.66677459138356,375.57241564405876,261.2787322495769,256.48235467918045),c(213.59902998506567,499.11597342170967,143.751867557388,254.03188632237297),c(225.80468884135516,270.5603915330555,156.3787207887802,199.30475968700645),c(181.05060636829376,109.95376642210931,158.32131359360977,122.52341784037282),c(37.634114806892526,45.71111637773084,61.19167335213138,49.82618992175161),c(37.634114806892526,0.0,17.483335243466108,7.351405070422369))
targetgene="ENSG00000124702"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of P1,P2 vs DMSO1,DMSO2 pos.}

The following figure shows the distribution of RRA score in the comparison P1,P2 vs DMSO1,DMSO2 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('parabinostat.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("ENSG00000189091","ENSG00000188895","ENSG00000053900","ENSG00000177565","ENSG00000145041","ENSG00000136504","ENSG00000181222","ENSG00000129691","ENSG00000198730","ENSG00000132341")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='P1,P2_vs_DMSO1,DMSO2 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(760.8194020420435,794.3850765102953,715.8454485796957,679.596557621268),c(213.59902998506567,391.6330781551534,254.47965743267338,222.17579768387606),c(4.068552952096489,2.4708711555530183,14.569446036221759,28.58879749608699),c(424.146645256059,405.222869510695,276.8194746882134,285.8879749608699),c(45.771220711085505,101.30571737767374,90.3305654245749,126.60753176838524),c(47.805497187133746,50.65285868883687,51.478709327983545,26.138329139279534),c(130.19369446708765,49.417423111060366,172.89075962983154,165.81502547730454),c(39.66839128294077,21.002404822200656,64.10556255937574,31.85608863849693),c(155.6221504176907,168.01923857760525,116.55556828977407,80.04863298904357),c(202.41050936680034,208.78861264423006,206.88613371434897,138.85987355242253),c(198.34195641470384,232.26188862198373,146.66575676463236,202.57205082941638),c(82.3881972799539,43.24024522217782,73.81852658352358,90.66732920187589),c(68.14826194761619,49.417423111060366,62.16296975454617,21.237392425664623),c(45.771220711085505,28.41501828885971,62.16296975454617,62.07853170578889),c(73.2339531377368,23.473275977753673,75.76111938835314,58.81124056337895),c(23.39417947455481,12.354355777765091,13.598149633806974,0.0),c(27.4627324266513,21.002404822200656,34.966670486932216,28.58879749608699),c(29.497008902699548,1.2354355777765091,60.2203769497166,45.742075993739185),c(8.137105904192978,0.0,9.712964024147839,31.039265852894445),c(0.0,0.0,7.770371219318271,4.084113928012427))
targetgene="ENSG00000189091"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(304.12433316921255,261.9123424886199,203.97224450710462,186.23559511736667),c(179.01632989224552,176.66728762204082,192.3166876781272,205.83934197182634),c(51.874050139230235,65.47808562215498,81.58889780284184,81.68227856024855),c(138.33080037128065,219.90753284421862,162.20649920326892,146.2112786228449),c(314.2957155494538,264.38321364417294,415.7148602335275,315.2935952425594),c(63.06257075749558,58.06547215549593,86.44537981491577,78.4149874178386),c(298.0215037410678,284.1501828885971,344.8102228572483,380.6394180907582),c(136.29652389523238,92.65766833323819,169.0055740201724,197.6711141158015),c(177.9991916542214,144.54596259985158,178.71853804432024,254.03188632237297),c(81.37105904192978,50.65285868883687,107.81390066804101,124.15706341157778),c(111.88520618265345,130.95617124430996,121.41205030184798,212.3739242566462),c(129.17655622906352,33.356760599965746,107.81390066804101,112.721544413143),c(193.25626522458325,198.90512802201798,241.85280420128117,216.45803818465865),c(141.382215085353,237.20363093308976,631.3426615696095,231.1608483255034),c(116.97089737277406,74.12613466659054,72.84723018110878,87.40003805946594),c(88.49102670809864,139.60422028874552,79.64630499801228,155.19632926447224),c(93.57671789821924,92.65766833323819,168.03427761775762,158.46362040688217),c(35.59983833084428,21.002404822200656,70.90463737627923,122.52341784037282),c(14.239935332337712,29.65045386663622,24.282410060369596,15.519632926447223),c(7.119967666168856,24.708711555530183,20.39722445071046,33.4897342097019))
targetgene="ENSG00000188895"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(265.4730801242959,101.30571737767374,184.54631645880895,196.0374685445965),c(196.3076799386556,232.26188862198373,150.5509423742915,180.5178356181493),c(161.72497984583543,95.1285394887912,127.23982871633669,187.86924068857167),c(88.49102670809864,45.71111637773084,107.81390066804101,123.3402406259753),c(154.60501217966657,101.30571737767374,160.26390639843933,186.23559511736667),c(77.30250608983329,67.948956777708,136.95279274048454,128.24117733959022),c(198.34195641470384,154.42944722206363,185.5176128612237,240.14589896713073),c(201.3933711287762,128.48530008875696,220.48428334815594,164.99820269170206),c(121.03945032487056,140.83965586652204,145.69446036221757,93.11779755868334),c(40.68552952096489,17.296098088871126,30.1101884748583,44.9252532081367),c(54.9254648533026,32.12132502218924,40.79444890142092,34.30655699530439),c(81.37105904192978,45.71111637773084,43.708338108665274,58.81124056337895),c(9.1542441422171,0.0,26.225002865199166,20.420569640062137),c(123.07372680091879,77.83244139992007,151.52223877670627,129.0580001251927),c(11.188520618265345,12.354355777765091,47.59352371832441,53.91030384976404),c(47.805497187133746,35.827631755518766,72.84723018110878,71.06358234741623),c(10.171382380241223,14.82522693331811,28.16759567002873,29.405620281689476),c(2.0342764760482446,9.883484622212073,20.39722445071046,19.60374685445965),c(1.0171382380241223,4.941742311106037,14.569446036221759,4.900936713614913),c(0.0,4.941742311106037,10.684260426562624,3.267291142409942))
targetgene="ENSG00000053900"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(157.65642689373897,301.44628097746823,82.56019420525664,169.899139405317),c(77.30250608983329,91.42223275546168,109.75649347287057,137.22622798121756),c(238.01034769764462,301.44628097746823,367.1500401127883,294.05620281689477),c(236.9932094596205,312.5652011774568,235.0537293843777,289.97208888888235),c(170.87922398805256,228.5555818886542,193.287984080542,205.83934197182634),c(94.59385613624337,40.7693740666248,158.32131359360977,216.45803818465865),c(83.40533551797803,98.83484622212073,86.44537981491577,106.1869621283231),c(133.24510918116002,207.55317706645354,205.91483731193418,214.82439261345368),c(71.19967666168856,84.00961928880263,108.7851970704558,78.4149874178386),c(189.18771227248675,179.13815877759382,116.55556828977407,140.4935191236275),c(205.4619240808727,134.6624779776395,217.5703941409116,83.31592413145351),c(65.09684723354383,32.12132502218924,29.138892072443518,37.57384813771433),c(64.07970899551971,7.412613466659055,45.65093091349484,41.65796206572676),c(44.75408247306138,48.18198753328386,53.42130213281311,73.51405070422369),c(60.01115604342321,121.07268662209789,110.72778987528537,80.86545577464607),c(63.06257075749558,16.06066251109462,55.363894937642684,22.054215211267106),c(18.3084882844342,14.82522693331811,30.1101884748583,40.024316494521784),c(32.54842361677191,28.41501828885971,81.58889780284184,58.81124056337895),c(10.171382380241223,1.2354355777765091,34.966670486932216,35.12337978090687),c(1.0171382380241223,0.0,12.62685323139219,8.168227856024854))
targetgene="ENSG00000177565"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(116.97089737277406,151.95857606651063,93.24445463181925,165.81502547730454),c(159.6907033697872,189.0216433998059,293.3315135292647,222.99262046947854),c(234.95893298357225,133.42704239986298,155.40742438636542,206.65616475742883),c(145.45076803744948,103.77658853322677,112.67038268011493,97.20191148669576),c(73.2339531377368,33.356760599965746,56.33519134005746,49.00936713614912),c(112.90234442067758,176.66728762204082,155.40742438636542,161.73091154929213),c(38.65125304491664,24.708711555530183,9.712964024147839,36.757025352111846),c(66.11398547156794,30.88588944441273,29.138892072443518,89.03368363067091),c(172.9135004641008,169.25467415538176,127.23982871633669,115.17201276995044),c(18.3084882844342,0.0,16.512038841051325,18.786924068857164),c(75.26822961378505,37.06306733329527,57.30648774247225,83.31592413145351),c(51.874050139230235,21.002404822200656,67.99074816903487,106.1869621283231),c(56.95974132935085,88.95136159990867,211.74261572642288,149.47856976525483),c(36.6169765688684,30.88588944441273,10.684260426562624,45.742075993739185),c(23.39417947455481,19.766969244424146,41.76574530383571,71.06358234741623),c(99.67954732636399,77.83244139992007,51.478709327983545,72.69722791862121),c(21.35990299850657,29.65045386663622,13.598149633806974,31.85608863849693),c(34.58270009282016,34.59219617774225,107.81390066804101,61.26170892018641),c(10.171382380241223,37.06306733329527,31.081484877273084,22.054215211267106),c(5.085691190120611,13.5897913555416,5.827778414488703,40.024316494521784))
targetgene="ENSG00000145041"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(84.42247375600215,50.65285868883687,103.92871505838187,107.0037849139256),c(278.6958772186095,384.22046468849436,295.2741063340943,330.8132281690066),c(265.4730801242959,202.6114347553475,246.7092862133551,307.94219017213703),c(309.21002435933315,213.73035495533608,200.08705889744547,242.59636732393818),c(152.57073570361834,142.07509144429855,198.14446609261591,230.34402553990088),c(111.88520618265345,149.4877049109576,287.503735114776,114.35518998434796),c(359.0497980225152,416.3417897106836,401.14541419730574,327.5459370265967),c(117.98803561079819,134.6624779776395,137.9240891428993,183.78512676055922),c(210.5476152709933,147.01683375540458,165.12038841051327,300.59078510171463),c(123.07372680091879,88.95136159990867,203.97224450710462,164.18137990609958),c(85.43961199402628,18.531533666647636,109.75649347287057,74.33087348982617),c(110.86806794462933,121.07268662209789,68.96204457144965,110.27107605633553),c(68.14826194761619,61.77177888882546,107.81390066804101,68.61311399060878),c(83.40533551797803,85.24505486657912,130.15371792358104,129.0580001251927),c(35.59983833084428,34.59219617774225,33.99537408451744,40.841139280124274),c(156.63928865571484,67.948956777708,130.15371792358104,100.46920262910571),c(146.4679062754736,161.8420606887227,205.91483731193418,142.94398748043494),c(216.65044469913803,217.4366616886656,257.3935466399177,227.89355718309344),c(9.1542441422171,11.118920199988583,36.90926329176179,29.405620281689476),c(1.0171382380241223,3.7063067333295274,0.9712964024147839,17.970101283254678))
targetgene="ENSG00000136504"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(131.21083270511178,165.54836742205222,162.20649920326892,201.7552280438139),c(247.1645918398617,211.25948379978306,186.4889092636385,185.4187723317642),c(105.78237675450872,197.66969244424146,184.54631645880895,124.15706341157778),c(294.9700890269955,265.61864922194945,203.97224450710462,245.04683568074563),c(224.78755060333103,253.26429344418437,327.32688761378216,297.3234939593047),c(96.62813261229162,132.19160682208647,177.74724164190545,138.04305076682004),c(25.42845595060306,33.356760599965746,97.12964024147838,35.940202566509356),c(60.01115604342321,50.65285868883687,67.0194517666201,144.57763305163994),c(280.73015369465776,155.66488279984014,235.0537293843777,262.2001141783978),c(42.71980599701314,42.00480964440131,42.737041706250494,31.85608863849693),c(42.71980599701314,55.59460099994291,41.76574530383571,18.786924068857164),c(128.15941799103942,34.59219617774225,131.12501432599583,98.01873427229825),c(144.43362979942538,108.7183308443328,141.80927475255845,258.1160002503854),c(45.771220711085505,51.888294266613386,121.41205030184798,100.46920262910571),c(83.40533551797803,91.42223275546168,110.72778987528537,121.70659505477033),c(41.702667758989016,64.24265004437848,28.16759567002873,10.618696212832312),c(48.82263542515787,21.002404822200656,36.90926329176179,28.58879749608699),c(25.42845595060306,40.7693740666248,51.478709327983545,62.07853170578889),c(12.205658856289467,13.5897913555416,26.225002865199166,19.60374685445965),c(3.051414714072367,9.883484622212073,14.569446036221759,7.351405070422369))
targetgene="ENSG00000181222"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(89.50816494612276,119.83725104432139,88.38797261974533,104.55331655711814),c(725.2195637111992,237.20363093308976,257.3935466399177,463.95534222221175),c(79.33678256588153,187.78620782202938,79.64630499801228,133.9589368388076),c(88.49102670809864,49.417423111060366,67.99074816903487,91.48415198747837),c(166.81067103595606,294.03366751080915,256.42225023750296,182.96830397495674),c(150.5364592275701,123.54355777765092,127.23982871633669,296.5066711737022),c(309.21002435933315,161.8420606887227,240.8815077988664,187.05241790296915),c(76.28536785180917,55.59460099994291,103.92871505838187,151.92903812206228),c(119.00517384882231,79.06787697769659,61.19167335213138,102.91967098591317),c(86.4567502320504,82.77418371102611,77.70371219318271,129.0580001251927),c(107.81665323055697,53.12372984438989,162.20649920326892,124.15706341157778),c(126.12514151499116,103.77658853322677,132.0963107284106,70.24675956181375),c(74.25109137576092,69.1843923554845,96.1583438390636,89.8505064162734),c(66.11398547156794,24.708711555530183,95.18704743664883,98.83555705790074),c(66.11398547156794,84.00961928880263,67.0194517666201,54.727126635366524),c(20.342764760482446,30.88588944441273,66.0481553642053,63.71217727699386),c(22.37704123653069,45.71111637773084,33.99537408451744,49.82618992175161),c(27.4627324266513,17.296098088871126,22.33981725554003,31.039265852894445),c(5.085691190120611,2.4708711555530183,11.655556828977407,2.4504683568074563),c(10.171382380241223,2.4708711555530183,14.569446036221759,24.50468356807456))
targetgene="ENSG00000129691"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(171.89636222607666,123.54355777765092,168.03427761775762,147.84492419404987),c(600.1115604342322,399.04569162181247,591.5195090706034,528.4843422848081),c(148.50218275152184,336.0384771552105,187.4602056660533,214.82439261345368),c(162.74211808385957,182.84446551092336,181.6324272515646,225.443088826286),c(28.479870664675424,95.1285394887912,67.0194517666201,87.40003805946594),c(110.86806794462933,28.41501828885971,129.18242152116625,89.03368363067091),c(119.00517384882231,38.298502911071786,60.2203769497166,104.55331655711814),c(121.03945032487056,130.95617124430996,146.66575676463236,226.25991161188847),c(141.382215085353,189.0216433998059,161.23520280085413,169.899139405317),c(94.59385613624337,165.54836742205222,144.7231639598028,88.21686084506842),c(35.59983833084428,18.531533666647636,39.82315249900614,26.138329139279534),c(124.09086503894292,70.41982793326102,110.72778987528537,115.17201276995044),c(138.33080037128065,135.897913555416,156.3787207887802,125.79070898278276),c(186.13629755841438,243.3808088219723,198.14446609261591,135.5925824100126),c(196.3076799386556,156.90031837761666,194.25928048295677,249.94777239436056),c(33.56556185479604,56.83003657771942,60.2203769497166,94.75144312988832),c(129.17655622906352,76.59700582214357,113.64167908252972,112.721544413143),c(37.634114806892526,28.41501828885971,69.93334097386443,59.628063348981435),c(14.239935332337712,53.12372984438989,19.425928048295678,13.885987355242253),c(1.0171382380241223,1.2354355777765091,28.16759567002873,13.885987355242253))
targetgene="ENSG00000198730"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(24.411317712578935,21.002404822200656,53.42130213281311,20.420569640062137),c(206.47906231889684,254.4997290219609,221.45557975057073,181.33465840375177),c(109.8509297066052,71.65526351103753,108.7851970704558,78.4149874178386),c(61.02829428144734,22.237840399977166,53.42130213281311,72.69722791862121),c(170.87922398805256,95.1285394887912,181.6324272515646,173.16643054772692),c(54.9254648533026,16.06066251109462,52.45000573039833,48.19254435054664),c(223.7704123653069,189.0216433998059,134.0389035332402,124.15706341157778),c(113.9194826587017,108.7183308443328,87.41667621733055,182.15148118935426),c(60.01115604342321,23.473275977753673,45.65093091349484,35.12337978090687),c(75.26822961378505,33.356760599965746,82.56019420525664,60.444886134583925),c(63.06257075749558,39.53393848884829,86.44537981491577,94.75144312988832),c(101.71382380241224,50.65285868883687,128.21112511875148,88.21686084506842),c(55.942603091326724,140.83965586652204,132.0963107284106,173.9832533333294),c(131.21083270511178,140.83965586652204,179.689834446735,194.40382297339153),c(86.4567502320504,49.417423111060366,64.10556255937574,32.67291142409942),c(40.68552952096489,54.3591654221664,8.741667621733054,27.771974710484507),c(84.42247375600215,54.3591654221664,117.52686469218885,76.78134184663364),c(21.35990299850657,3.7063067333295274,6.799074816903487,8.985050641627339),c(0.0,3.7063067333295274,17.483335243466108,17.153278497652195),c(0.0,0.0,0.0,0.0))
targetgene="ENSG00000132341"
collabel=c("DMSO1","DMSO2","P1","P2")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

